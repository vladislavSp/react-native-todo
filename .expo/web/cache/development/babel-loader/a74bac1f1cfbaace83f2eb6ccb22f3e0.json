{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Form() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  return _jsxs(KeyboardAvoidingView, {\n    style: styles.writeWrapper,\n    behavior: Platform.OS === 'ios' ? \"padding\" : \"height\",\n    children: [_jsx(TextInput, {\n      value: value,\n      style: styles.input,\n      onChangeText: function onChangeText(text) {\n        return setValue(text);\n      },\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443...\"\n    }), _jsx(TouchableOpacity, {\n      children: _jsx(View, {\n        children: _jsx(Text, {\n          children: \"+\"\n        })\n      })\n    })]\n  });\n}\n;\nvar styles = StyleSheet.create({\n  writeWrapper: {\n    position: 'absolute',\n    width: '100%',\n    bottom: 60,\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center'\n  },\n  input: {\n    paddingVertical: 15,\n    paddingHorizontal: 15,\n    color: '#fff'\n  }\n});","map":{"version":3,"names":["React","useState","Form","value","setValue","styles","writeWrapper","Platform","OS","input","text","StyleSheet","create","position","width","bottom","flexDirection","justifyContent","alignItems","paddingVertical","paddingHorizontal","color"],"sources":["G:/Work/todoRN/components/Form.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { StyleSheet, View, Text, TextInput, KeyboardAvoidingView, Platform, TouchableOpacity } from \"react-native\";\r\n\r\nexport default function Form() {\r\n    const [value, setValue] = useState('');\r\n\r\n    return (\r\n        <KeyboardAvoidingView\r\n            style={styles.writeWrapper}\r\n            behavior={Platform.OS === 'ios' ? \"padding\" : \"height\" }\r\n        >\r\n            <TextInput\r\n                value={value}\r\n                style={styles.input}\r\n                onChangeText={text => setValue(text)}\r\n                placeholder=\"Введите задачу...\"\r\n            />\r\n            <TouchableOpacity >\r\n                <View>\r\n                    <Text>+</Text>\r\n                </View>\r\n            </TouchableOpacity>\r\n        </KeyboardAvoidingView>\r\n    )\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    writeWrapper: {\r\n        position: 'absolute',\r\n        width: '100%',\r\n        bottom: 60,\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n    },\r\n    input: {\r\n        paddingVertical: 15,\r\n        paddingHorizontal: 15,\r\n        color: '#fff',\r\n    }\r\n});\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;;;;AAGA,eAAe,SAASC,IAAT,GAAgB;EAC3B,gBAA0BD,QAAQ,CAAC,EAAD,CAAlC;EAAA;EAAA,IAAOE,KAAP;EAAA,IAAcC,QAAd;;EAEA,OACI,MAAC,oBAAD;IACI,KAAK,EAAEC,MAAM,CAACC,YADlB;IAEI,QAAQ,EAAEC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,SAAxB,GAAoC,QAFlD;IAAA,WAII,KAAC,SAAD;MACI,KAAK,EAAEL,KADX;MAEI,KAAK,EAAEE,MAAM,CAACI,KAFlB;MAGI,YAAY,EAAE,sBAAAC,IAAI;QAAA,OAAIN,QAAQ,CAACM,IAAD,CAAZ;MAAA,CAHtB;MAII,WAAW,EAAC;IAJhB,EAJJ,EAUI,KAAC,gBAAD;MAAA,UACI,KAAC,IAAD;QAAA,UACI,KAAC,IAAD;UAAA;QAAA;MADJ;IADJ,EAVJ;EAAA,EADJ;AAkBH;AAAA;AAED,IAAML,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;EAC7BN,YAAY,EAAE;IACVO,QAAQ,EAAE,UADA;IAEVC,KAAK,EAAE,MAFG;IAGVC,MAAM,EAAE,EAHE;IAIVC,aAAa,EAAE,KAJL;IAKVC,cAAc,EAAE,cALN;IAMVC,UAAU,EAAE;EANF,CADe;EAS7BT,KAAK,EAAE;IACHU,eAAe,EAAE,EADd;IAEHC,iBAAiB,EAAE,EAFhB;IAGHC,KAAK,EAAE;EAHJ;AATsB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}
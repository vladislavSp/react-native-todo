{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ListItem(_ref) {\n  var item = _ref.item;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      check = _useState2[0],\n      setCheck = _useState2[1];\n\n  var handleCheck = function handleCheck() {\n    setCheck(function (prev) {\n      return !prev;\n    });\n  };\n\n  console.log(check);\n  return _jsx(TouchableHighlight, {\n    onPress: handleCheck,\n    activeOpacity: 0.6,\n    style: [styles.item, check ? {\n      backgroundColor: 'red'\n    } : {}],\n    underlayColor: \"#536aa5\",\n    children: _jsx(Text, {\n      style: [styles.text, check ? styles.textCheck : ''],\n      children: item.text\n    })\n  });\n}\n;\nvar styles = StyleSheet.create({\n  item: {\n    overflow: 'hidden',\n    marginBottom: 16,\n    borderRadius: 16\n  },\n  text: {\n    padding: 20,\n    overflow: 'hidden',\n    backgroundColor: \"red\",\n    borderRadius: 16,\n    color: \"#000\",\n    fontSize: 18\n  },\n  textCheck: {\n    textDecorationLine: 'line-through'\n  }\n});","map":{"version":3,"names":["React","useState","ListItem","item","check","setCheck","handleCheck","prev","console","log","styles","backgroundColor","text","textCheck","StyleSheet","create","overflow","marginBottom","borderRadius","padding","color","fontSize","textDecorationLine"],"sources":["G:/Work/todoRN/components/ListItem.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { TouchableHighlight, Text, StyleSheet } from \"react-native\";\r\n\r\nexport default function ListItem({ item }) {\r\n    const [check, setCheck] = useState(false);\r\n\r\n    const handleCheck = () => {\r\n        setCheck(prev => !prev);\r\n    }\r\n\r\n    console.log(check);\r\n\r\n    return (\r\n        <TouchableHighlight\r\n            onPress={handleCheck}\r\n            activeOpacity={0.6}\r\n            style={[styles.item, check ? { backgroundColor: 'red'} : {}]}\r\n            underlayColor=\"#536aa5\"\r\n        >\r\n            <Text style={[styles.text, check ? styles.textCheck : '']}>{item.text}</Text>\r\n        </TouchableHighlight>\r\n    )\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    item: {\r\n        overflow: 'hidden',\r\n        marginBottom: 16,\r\n        borderRadius: 16,\r\n    },\r\n    text: {\r\n        padding: 20,\r\n        overflow: 'hidden',\r\n        backgroundColor: \"red\",\r\n        borderRadius: 16,\r\n        color: \"#000\",\r\n        fontSize: 18,\r\n    },\r\n    textCheck: {\r\n        textDecorationLine: 'line-through',\r\n    }\r\n});\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAGA,eAAe,SAASC,QAAT,OAA4B;EAAA,IAARC,IAAQ,QAARA,IAAQ;;EACvC,gBAA0BF,QAAQ,CAAC,KAAD,CAAlC;EAAA;EAAA,IAAOG,KAAP;EAAA,IAAcC,QAAd;;EAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;IACtBD,QAAQ,CAAC,UAAAE,IAAI;MAAA,OAAI,CAACA,IAAL;IAAA,CAAL,CAAR;EACH,CAFD;;EAIAC,OAAO,CAACC,GAAR,CAAYL,KAAZ;EAEA,OACI,KAAC,kBAAD;IACI,OAAO,EAAEE,WADb;IAEI,aAAa,EAAE,GAFnB;IAGI,KAAK,EAAE,CAACI,MAAM,CAACP,IAAR,EAAcC,KAAK,GAAG;MAAEO,eAAe,EAAE;IAAnB,CAAH,GAA+B,EAAlD,CAHX;IAII,aAAa,EAAC,SAJlB;IAAA,UAMI,KAAC,IAAD;MAAM,KAAK,EAAE,CAACD,MAAM,CAACE,IAAR,EAAcR,KAAK,GAAGM,MAAM,CAACG,SAAV,GAAsB,EAAzC,CAAb;MAAA,UAA4DV,IAAI,CAACS;IAAjE;EANJ,EADJ;AAUH;AAAA;AAED,IAAMF,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;EAC7BZ,IAAI,EAAE;IACFa,QAAQ,EAAE,QADR;IAEFC,YAAY,EAAE,EAFZ;IAGFC,YAAY,EAAE;EAHZ,CADuB;EAM7BN,IAAI,EAAE;IACFO,OAAO,EAAE,EADP;IAEFH,QAAQ,EAAE,QAFR;IAGFL,eAAe,EAAE,KAHf;IAIFO,YAAY,EAAE,EAJZ;IAKFE,KAAK,EAAE,MALL;IAMFC,QAAQ,EAAE;EANR,CANuB;EAc7BR,SAAS,EAAE;IACPS,kBAAkB,EAAE;EADb;AAdkB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}